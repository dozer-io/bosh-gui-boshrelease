user vcap;
worker_processes 2;
daemon off;

error_log            /var/vcap/sys/log/bosh-gui/error.log;
pid                  /var/vcap/sys/run/bosh-gui/nginx.pid;

events {
  use epoll;
  worker_connections 8192;
}

http {
  include            /var/vcap/jobs/bosh-gui/config/mime.types;
  default_type       text/html;
  server_tokens      off;

  access_log         /var/vcap/sys/log/bosh-gui/access.log;
  client_body_temp_path /var/vcap/data/tmp/bosh-gui 1 2;

  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;

  underscores_in_headers on;

  ssl_session_cache shared:SSL:10m;

  gzip               on;
  gzip_min_length    1250;
  gzip_buffers       16 8k;
  gzip_comp_level    2;
  gzip_proxied       any;
  gzip_types         application/json application/xml application/xhtml+xml application/javascript application/atom+xml application/rss+xml application/x-font-ttf application/x-javascript application/xml+rss image/svg+xml text/css text/javascript text/plain text/xml;
  gzip_vary          on;
  gzip_disable       "MSIE [1-6]\.(?!.*SV1)";

  server {
          charset UTF-8;
          listen 80;
          root /var/vcap/packages/bosh-gui;
          index index.html;
          server_name _;

          location /bosh/ {
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-NginX-Proxy true;
                  proxy_pass https://<%= p('bosh-gui.target') %>/;
                  proxy_ssl_session_reuse off;
                  proxy_set_header Host $http_host;
                  proxy_redirect https://$host/ /bosh/;

                  # Intercept BOSH task redirects, since they result in CORS errors
                  # Instead return a 202 with the json encoded location
                  set $body '';
                  header_filter_by_lua_block {
                  if ngx.status == ngx.HTTP_MOVED_TEMPORARILY then
                     ngx.var.body = "{\"location\":\"" .. ngx.header.location .. "\"}"
                     ngx.header.location = nil
                     ngx.header.content_type = "application/json; charset=utf-8"
                     ngx.header.content_length = #ngx.var.body
                     ngx.status = ngx.HTTP_ACCEPTED
                     return
                  end
                  }

                  body_filter_by_lua_block {
                  if ngx.var.body ~= '' then
                     ngx.arg[1] = ngx.var.body
                     ngx.arg[2] = true
                     return
                  end
                  }
          }

          location / {
                  try_files $uri $uri/index.html;
          }
  }
}
